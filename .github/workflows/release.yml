name: release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag:
        description: The tag to run against. This trigger only runs the MSI builder.
        required: true

jobs:
  release:
    name: release
    strategy:
      # the goreleaser and the Github release API doesn't handle concurrent
      # access well, so run goreleaser serially
      max-parallel: 1
      matrix:
        os:
        - ubuntu-20.04
        - macos-latest
    runs-on: ${{ matrix.os }}
    if: github.event_name != 'workflow_dispatch'
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: 1.20.x

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Install dependency required for linux builds
      if: matrix.os == 'ubuntu-20.04'
      run: sudo apt-get update && sudo apt-get install -y libudev-dev

    - name: GoReleaser
      uses: goreleaser/goreleaser-action@v4
      with:
        version: latest
        args: release --clean --config .goreleaser.${{ matrix.os }}.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-msi:
    name: Build Windows MSI and upload to release
    runs-on: ubuntu-20.04
    needs: [release]
    if: >-  # https://github.com/actions/runner/issues/491
      always() &&
      (needs.release.result == 'success' || needs.release.result == 'skipped')
    env:
      INSTALLER: ${{ github.workspace }}/.github/win-msi
      BIN: ${{ github.workspace }}/.github/win-msi/src/bin
      WIXIMG: dactiv/wix@sha256:17d232708589641f5632f9a1ff9463ad087b192cea7b8e6012d2b47ec6af5f6c
    steps:
    - name: Normalize tag values
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]] ; then
            VER=${{ github.event.inputs.tag }}
        else
            VER=${GITHUB_REF/refs\/tags\//}
        fi

        VERSION=${VER//v}

        echo "VER_TAG=$VER" >> $GITHUB_ENV
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "ASSET=saml2aws_${VERSION}_windows_amd64.zip" >> $GITHUB_ENV

    - name: Check out code
      uses: actions/checkout@v3

    - name: Retrieve the release asset
      id: asset
      uses: robinraju/release-downloader@768b85c8d69164800db5fc00337ab917daf3ce68  # v1.7
      with:
        repository: ${{ github.repository }}
        tag: ${{ env.VER_TAG }}
        fileName: ${{ env.ASSET }}
        out-file-path: ${{ env.BIN }}

    - name: Unzip asset
      working-directory: ${{ env.BIN }}
      run: unzip "${ASSET}"

    - name: Build MSI
      run: |
        # container does not run as root
        chmod -R o+rw "${INSTALLER}"

        cat "${INSTALLER}/wix.sh" | docker run --rm -i -e VERSION -v "${INSTALLER}:/wix" ${WIXIMG} /bin/sh

    - name: Upload the asset to the release
      uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844  # v0.1.15 / v1
      with:
        tag_name: ${{ env.VER_TAG }}
        files: ${{ env.INSTALLER }}/out/*.msi
